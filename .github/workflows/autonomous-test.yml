name: Autonomous Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 */6 * * *' # Run every 6 hours
  workflow_dispatch:

jobs:
  test-generation:
    name: Generate and Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: etsy_manager_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Setup test environment
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/etsy_manager_test
          REDIS_URL: redis://localhost:6379
        run: |
          cd apps/web
          pnpm db:generate
          pnpm db:push
          
      - name: Run autonomous test generation
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/etsy_manager_test
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test
        run: |
          pnpm tsx scripts/run-autonomous-tests.ts
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: .taskmaster/test-results.json
          
      - name: Upload generated tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-tests
          path: |
            apps/**/__tests__/**
            apps/**/e2e/**
            
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('.taskmaster/test-results.json', 'utf8'));
            
            const comment = `## ðŸ¤– Autonomous Test Results
            
            ${results.summary}
            
            <details>
            <summary>View detailed results</summary>
            
            \`\`\`json
            ${JSON.stringify(results.results, null, 2)}
            \`\`\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
  
  self-healing-monitor:
    name: Self-Healing Test Monitor
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup environment
        uses: ./.github/actions/setup-test-env
        
      - name: Run continuous monitoring
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          timeout 3600 pnpm tsx scripts/run-autonomous-tests.ts --monitor || true
          
      - name: Report failures
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Self-healing tests detected failures',
              body: 'The autonomous test monitoring detected failures that could not be self-healed. Please review the test results.',
              labels: ['bug', 'testing', 'automated']
            });