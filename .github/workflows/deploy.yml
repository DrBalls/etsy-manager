name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-web:
    name: Deploy Web to Vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web app
        run: pnpm --filter @etsy-manager/web build

      - name: Deploy to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web

  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build API
        run: pnpm --filter @etsy-manager/api build

      - name: Build Docker image
        run: |
          cd apps/api
          docker build -t etsy-manager-api:${{ github.sha }} .

      - name: Push to Docker registry
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin
          docker tag etsy-manager-api:${{ github.sha }} $DOCKER_REGISTRY/etsy-manager-api:${{ github.sha }}
          docker tag etsy-manager-api:${{ github.sha }} $DOCKER_REGISTRY/etsy-manager-api:latest
          docker push $DOCKER_REGISTRY/etsy-manager-api:${{ github.sha }}
          docker push $DOCKER_REGISTRY/etsy-manager-api:latest

  deploy-extension:
    name: Deploy Extension to Chrome Web Store
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy-extension]')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build extension
        run: pnpm --filter @etsy-manager/extension build

      - name: Package extension
        run: |
          cd apps/extension
          zip -r etsy-manager-extension.zip dist/

      - name: Upload to Chrome Web Store
        uses: mobilefirstllc/cws-publish@v1
        with:
          file_path: apps/extension/etsy-manager-extension.zip
          extension_id: ${{ secrets.CHROME_EXTENSION_ID }}
          client_id: ${{ secrets.CHROME_CLIENT_ID }}
          client_secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh_token: ${{ secrets.CHROME_REFRESH_TOKEN }}

  release-desktop:
    name: Release Desktop App
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release-desktop]')
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build desktop app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm --filter @etsy-manager/desktop build
          pnpm --filter @etsy-manager/desktop dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ matrix.os }}
          path: |
            apps/desktop/dist/*.exe
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.AppImage
            apps/desktop/dist/*.deb
          retention-days: 7
